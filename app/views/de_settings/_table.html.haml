%table.table.visited.tablesorter
  %thead
    %tr
      %th Name
      %th Size
      %th Created
      %th Last visited
      %th Owner
      %th
  %tbody
  - list.each do |de|
    %tr
      %td
        %a{:href=>de_setting_path(de.secure_id)}
          = de.name || "<Unnamed>"
      %td{"data-val" => de.user_file.size}
        = number_to_human_size(de.user_file.size)
      %td.smaller{"data-val" => de.created_at.to_i}
        = de.created_at.to_formatted_s(:rfc822)
      %td.smaller{"data-val" => de.last_visit_by(current_user) ? de.last_visit_by(current_user).last.to_i : ''}
        = de.last_visit_by(current_user) ? de.last_visit_by(current_user).last.to_formatted_s(:rfc822) : ''
      -#   = moment(val.last).format("MMMM Do YYYY, h:mm:ss a")}
      %td
        = de.user.nil? ? '<Anonymous>' : de.user.name
      %td
        .btn-group
          = link_to "View", degust_compare_url('', de.secure_id), :class => 'btn btn-info btn-xs'
          %a.dropdown-toggle.btn.btn-xs.btn-info{"data-toggle"=>"dropdown","role"=>"button","aria-haspopup"=>"true", "aria-expanded"=>"false" }
            %span.caret
            %span.sr-only
              Toggle Dropdown
          %ul.dropdown-menu
            - frontend_versions.each do |ver|
              %li
                = link_to "Version #{ver}", degust_compare_url(ver, de.secure_id)

        - if de.user == current_user
          = link_to "Delete", de_setting_path(de.secure_id),
            :method => :delete,
            :class => 'btn btn-danger btn-xs',
            :data =>  { confirm: 'Are you certain you want to delete this data?' }

:javascript
  $.tablesorter.addParser({
    // set a unique id
    id: 'data',
    is: function(s, table, cell, $cell) {
      // return false so this parser is not auto detected
      return false;
    },
    format: function(s, table, cell, cellIndex) {
      var $cell = $(cell);
      return $cell.attr('data-val') || s;
    },
    // flag for filter widget (true = ALWAYS search parsed values; false = search cell text)
    parsed: false,
    // set type, either numeric or text
    type: 'numeric'
  });

  $('.tablesorter').tablesorter({
    theme : 'blue',
    headers: {
        1 : { sorter: 'data' },
        2 : { sorter: 'data' },
        3 : { sorter: 'data' },
        5 : { sorter: false },
     },
  });
